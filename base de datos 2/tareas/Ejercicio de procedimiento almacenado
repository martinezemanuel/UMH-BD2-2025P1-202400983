DROP TABLE IF EXISTS Transacciones;
DROP TABLE IF EXISTS Cuentas;

/* creamos las tablas */
CREATE TABLE Cuentas (
    Cuenta INT PRIMARY KEY,
    TotalCreditos DECIMAL(10,2) DEFAULT 0.00,
    TotalDebitos DECIMAL(10,2) DEFAULT 0.00,
    Saldo DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE Transacciones (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Cuenta INT,
    Fecha DATE,
    Credito DECIMAL(10,2) DEFAULT 0.00,
    Debito DECIMAL(10,2) DEFAULT 0.00,
    FOREIGN KEY (Cuenta) REFERENCES Cuentas(Cuenta)
);

/* Eliminar la procedura si ya existe */
DROP PROCEDURE IF EXISTS InsertarTransaccion;

DELIMITER //

CREATE PROCEDURE InsertarTransaccion(
    IN p_Cuenta INT,
    IN p_Fecha DATE,
    IN p_Monto DECIMAL(10,2),
    IN p_Tipo CHAR(1)    /* 'C' para crédito, 'D' para débito */ 
)
BEGIN
    DECLARE v_ExisteCuenta INT;
    DECLARE v_TotalCreditos DECIMAL(10,2);
    DECLARE v_TotalDebitos DECIMAL(10,2);
    DECLARE v_Saldo DECIMAL(10,2);

    /* Verificacion de la existencia de la cuenta */ 
    SELECT COUNT(*) INTO v_ExisteCuenta FROM Cuentas WHERE Cuenta = p_Cuenta;

    IF v_ExisteCuenta = 0 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'La cuenta especificada no existe';
    END IF;

    /* Inserción de la transacción */
    IF p_Tipo = 'C' THEN
        INSERT INTO Transacciones (Cuenta, Fecha, Credito, Debito) 
        VALUES (p_Cuenta, p_Fecha, p_Monto, 0.00);
    ELSEIF p_Tipo = 'D' THEN
        
        SELECT Saldo INTO v_Saldo FROM Cuentas WHERE Cuenta = p_Cuenta;
        IF v_Saldo < p_Monto THEN
            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Saldo insuficiente';
        END IF;
        INSERT INTO Transacciones (Cuenta, Fecha, Credito, Debito) 
        VALUES (p_Cuenta, p_Fecha, 0.00, p_Monto);
    ELSE
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Tipo de transacción inválido. Use "C" para crédito o "D" para débito.';
    END IF;

    /* Actualización de los totales de la cuenta */
    SELECT COALESCE(SUM(Credito), 0.00), COALESCE(SUM(Debito), 0.00) 
    INTO v_TotalCreditos, v_TotalDebitos 
    FROM Transacciones WHERE Cuenta = p_Cuenta;

    UPDATE Cuentas
    SET TotalCreditos = v_TotalCreditos,
        TotalDebitos = v_TotalDebitos,
        Saldo = v_TotalCreditos - v_TotalDebitos
    WHERE Cuenta = p_Cuenta;

END //

DELIMITER ;

/* Insertamos cuentas iniciales */
INSERT INTO Cuentas (Cuenta, TotalCreditos, TotalDebitos, Saldo) VALUES
(20010001, 0.00, 0.00, 0.00),
(20010002, 0.00, 0.00, 0.00),
(20010003, 0.00, 0.00, 0.00),
(20010004, 0.00, 0.00, 0.00),
(20010005, 0.00, 0.00, 0.00);

/* Llamadas a la inserción de transacciones */
CALL InsertarTransaccion(20010001, '2025-03-08', 800.00, 'C'); -- Crédito
CALL InsertarTransaccion(20010002, '2025-01-05', 560.00, 'C'); 
CALL InsertarTransaccion(20010003, '2024-10-30', 1254.00, 'C'); 
CALL InsertarTransaccion(20010004, '2025-01-14', 15000.00, 'C'); 
CALL InsertarTransaccion(20010005, '2024-11-23', 256.00, 'C'); 

SELECT * FROM Cuentas;
SELECT * FROM Transacciones;
